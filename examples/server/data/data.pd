moudle data 

import (
    "json"
)

type Store struct 
    fruits {string: int}

def New() Store 
    return Store{}

type Fruit struct 
    Name      string {.json = "name"}
    Quantiity int    {.json = "quantity"}

def (s &Store) FruitsJSON() string
    return json.Format(s.fruits)

def (s &Store) GetFruit(name string) maybe[Fruit]
    match s.fruits[name]
        case some(quantiity)
            return some(Fruit{.Name = name, .Quantiity = val})
        case none()
            return none()

def (s Store) AddFruit(f Fruit) Store 
    return s.fruits{f.Name: f.Quantity}

def (s Store) UpdateFruit(f Fruit) (Store, found bool)
    match s.fruits[name]
        case some(quantiity)
            return (s.AddFruit(fruit), true)
        case none()
            return (s, false)

def (s Store) DeleteFruit(name string) (Store, found bool)
    match s.fruits[name]
        case some(quantiity)
            return (s{.fruits = (fruits) => delete(fruits, name)}, true)
        case none()
            return (s, false)

