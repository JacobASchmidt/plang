module sync

import (
    "control"
)

type Spin[A] struct 
    state unsafe.State[A]
    flag Bool 

def (s Spin[A]) Update(f (A) => A) 
    control.While(
        () => state.flag.Set(true),
        () => () #spin 
    )
    s.state.Update(f)
    state.flag.Set(false)

def (s Spin[A]) Read[B](f (&A) => B) B 
    control.While(
        () => state.flag.Set(true),
        () => ()
    )
    ret = f(s.state.Read())
    s.state.Update(false)
    return ret 
