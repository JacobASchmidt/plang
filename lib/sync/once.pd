module sync 

import (
    "runtime"
    "control"
    "queues"
)

#uses spinlock implementation
type Once struct
    started Bool 
    done Bool 

def (o Once) Do(f () => ()) 
    if o.done.Load()
        return
    if not o.started.Set(true)
        f()
        o.done.Set(true)
    else
        control.While(
            () => not o.done.Load(),
            () => #spin
        ) 


