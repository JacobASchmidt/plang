module sync 

type RW[A] struct 
    state      unsafe.State[A]
    numWriters Int
    numReaders Int
    canWrite   Signal 
    canRead    Signal 

def (cr ConcurrentReads) Read[B](f (&A) => B) B
    cr.canRead.Wait(() => cr.numReaders.Writers() == 0)
    cr.numReaders.Add(1)
    ret = f(c.state.Read())
    cr.numReader.Sub(1)
    return ret

def (cr ConcurrentReads) Update(f (A) => A) ConcurrentReads
    cr.canWrite.Wait(() => cr.numWriters == 0)
    